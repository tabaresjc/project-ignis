version: "3.9"
services:
  app:
    container_name: app-${ENVIRONMENT}
    environment:
      - PORT=${PORT}
      - DATABASE_TYPE=mysql
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_SYNCHRONIZE=${DATABASE_SYNCHRONIZE}
      - DATABASE_LOGGING=${DATABASE_LOGGING}
      - DATA_PATH=${DATA_PATH}
    build:
      args:
        - PORT=${PORT}
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./tmp/audio-data-${ENVIRONMENT}:${DATA_PATH}
    command: >
      bash -c "npm run build && \
               npx nx run ignis-api:seed:db-create && \
               npx nx run ignis-api:seed:run && \
               npx nx run ignis-api:migrations:run && \
               npm run start"
  mysql:
    container_name: mysqldb-${ENVIRONMENT}
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USERNAME}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
    ports:
      - ${DATABASE_PORT}:3306
    volumes:
      - ./tmp/mysql-${ENVIRONMENT}:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 1s
      retries: 5
